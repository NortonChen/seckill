<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd">

    <!-- Activemq 连接工厂 -->
    <bean id="activeMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <constructor-arg value="system1" />
        <constructor-arg value="manager1" />
        <constructor-arg value="failover:(tcp://localhost:61616)?timeout=2000" />
    </bean>

    <!-- ConnectionFactory Definition -->
    <bean id="connectionFactory"
          class="org.springframework.jms.connection.CachingConnectionFactory">
        <constructor-arg ref="activeMQConnectionFactory" />
    </bean>

    <!-- Default Destination Queue Definition -->
    <!-- 测试配置多个Destination -->
    <!-- P2P START-->
    <bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息队列的名字 -->
        <constructor-arg>
            <value>testSpringQueue</value>
        </constructor-arg>
    </bean>

    <!-- P2P topic-->
    <bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
        <!-- 设置消息队列的名字 -->
        <constructor-arg>
            <value>testSpringTopic</value>
        </constructor-arg>
    </bean>



    <!-- 配置JMS模板（Queue），Spring提供的JMS工具类，它发送、接收消息。 -->
    <bean id="jmsTemplateQueue" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="defaultDestination" ref="queueDestination" />
        <property name="receiveTimeout" value="10000" />
    </bean>

    <!-- 配置JMS模板（Topic），Spring提供的JMS工具类，它发送、接收消息。 -->
    <bean id="jmsTemplateTopic" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="defaultDestination" ref="topicDestination" />
        <property name="receiveTimeout" value="10000" />
    </bean>


    <!-- Message Sender Definition -->
    <!-- Queue-->
    <bean id="messageSender" class="org.seckill.activemq.publisher.MessageSender">
        <constructor-arg index="0" ref="jmsTemplateQueue" />
        <constructor-arg index="1" ref="queueDestination" />
    </bean>

    <!-- Message Sender Definition -->
    <!-- Topic-->
    <bean id="messageSenderTopic" class="org.seckill.activemq.publisher.MessageSenderTopic">
        <constructor-arg index="0" ref="jmsTemplateTopic" />
        <constructor-arg index="1" ref="topicDestination" />
    </bean>


    <!-- 配置消息消费监听者 -->
    <!-- Queue-->
    <bean id="consumerMessageListenerQueue" class="org.seckill.activemq.consumer.MessageReceiver" />
    <!-- 消息监听容器，配置连接工厂,监听器是上面定义的监听器 -->
    <bean id="jmsContainerQueue" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destination" ref="queueDestination" />
        <!--主题（Topic）和队列消息的主要差异体现在JmsTemplate中"pubSubDomain"是否设置为True。如果为True，则是Topic；如果是false或者默认，则是queue-->
        <property name="pubSubDomain" value="false" />
        <property name="messageListener" ref="consumerMessageListenerQueue" />
    </bean>

    <!-- 配置消息消费监听者 -->
    <!-- Topic-->
    <bean id="consumerMessageListenerTopic" class="org.seckill.activemq.consumer.MessageReceiverTopic1" />
    <bean id="consumerMessageListenerTopic2" class="org.seckill.activemq.consumer.MessageReceiverTopic2" />
    <!-- 消息监听容器，配置连接工厂,监听器是上面定义的监听器 -->
    <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destination" ref="topicDestination" />
        <!--主题（Topic）和队列消息的主要差异体现在JmsTemplate中"pubSubDomain"是否设置为True。如果为True，则是Topic；如果是false或者默认，则是queue-->
        <property name="pubSubDomain" value="true" />
        <property name="messageListener" ref="consumerMessageListenerTopic" />
    </bean>
    <bean id="jmsContainer2" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destination" ref="topicDestination" />
        <!--主题（Topic）和队列消息的主要差异体现在JmsTemplate中"pubSubDomain"是否设置为True。如果为True，则是Topic；如果是false或者默认，则是queue-->
        <property name="pubSubDomain" value="true" />
        <property name="messageListener" ref="consumerMessageListenerTopic2" />
    </bean>
</beans>